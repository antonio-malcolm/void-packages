# Template file for 'nvidia-unobtrusive'

_desc="NVIDIA drivers for linux, alternate install (side-by-side with xorg GL drivers)"

pkgname=nvidia-unobtrusive
version=367.57
revision=1
maintainer="Antonio Malcolm <antonio@antoniomalcolm.com>"
license="Proprietary NVIDIA license"
homepage="http://www.nvidia.com"

only_for_archs="i686 x86_64"
nopie=yes
repository="nonfree"
create_wrksrc=yes
short_desc="${_desc} - Libraries and Utilities"
depends="nvidia-unobtrusive-gtklibs-${version}_${revision} nvidia-unobtrusive-libs-${version}_${revision} nvidia-unobtrusive-dkms-${version}_${revision} pkg-config"
conflicts="catalyst>=0 xserver-abi-video>21_1"
provides="nvidia-${version}_${revision}"
replaces="nvidia>=0" 

build_options="glvnd"
desc_option_glvnd="Add support for NVIDIA's GL Vendor Neutral Dispatch implementation"
build_options_default="glvnd"

if [ "$XBPS_TARGET_MACHINE" = "i686" ]; then
	_pkg="NVIDIA-Linux-x86-${version}"
	distfiles="http://us.download.nvidia.com/XFree86/Linux-x86/${version}/NVIDIA-Linux-x86-${version}.run"
	checksum=43d4e926f71ac6c581018badf467458709822e97a7564ed9f1b521b7b63d88bb
else
	_pkg="NVIDIA-Linux-x86_64-${version}-no-compat32"
	distfiles="http://us.download.nvidia.com/XFree86/Linux-x86_64/${version}/NVIDIA-Linux-x86_64-${version}-no-compat32.run"
	checksum=b94a8ab6a1da464b44ba9bbb25e1e220441ae8340221de3bd159df00445dd6e4
fi

subpackages="nvidia-unobtrusive-gtklibs nvidia-unobtrusive-dkms nvidia-unobtrusive-opencl nvidia-unobtrusive-libs"

do_extract() {
	install -m755 ${XBPS_SRCDISTDIR}/${pkgname}-${version}/${_pkg}.run ${wrksrc}
	cd ${wrksrc}
	./${_pkg}.run --extract-only
	rm -f ${_pkg}.run
}

do_configure() {
	cd ${_pkg}
	# patches
}

do_install() {
  cd ${_pkg}

  # X driver
  vinstall nvidia_drv.so 755 usr/lib/xorg/modules/drivers

  # GLX extension module for X
  vinstall libglx.so.${version} 755 opt/lib/nvidia
  ln -sf libglx.so.${version} ${DESTDIR}/opt/lib/nvidia/libglx.so
	
	# GLX client libs
	if [ "${build_option_glvnd}" ]; then
		# ----- Also provided by the libglvnd package (todo)
		vinstall libGL.so.1.0.0 755 opt/lib/nvidia
		ln -sf libGL.so.1.0.0 ${DESTDIR}/opt/lib/nvidia/libGL.so
		ln -sf libGL.so.1.0.0 ${DESTDIR}/opt/lib/nvidia/libGL.so.1
	
		vinstall libGLX.so.0 755 opt/lib/nvidia
		ln -sf libGLX.so.0 ${DESTDIR}/opt/lib/nvidia/libGLX.so
		# --------------------------------------------------
	
		# Required for GLVND option
		vinstall libGLX_nvidia.so.${version} 755 opt/lib/nvidia
		ln -sf libGLX_nvidia.so.${version} ${DESTDIR}/opt/lib/nvidia/libGLX_nvidia.so.0
		ln -sf libGLX_nvidia.so.${version} ${DESTDIR}/opt/lib/nvidia/libGLX_indirect.so.0
	else
		vinstall libGL.so.${version} 755 opt/lib/nvidia
		ln -sf libGL.so.${version} ${DESTDIR}/opt/lib/nvidia/libGL.so
		ln -sf libGL.so.${version} ${DESTDIR}/opt/lib/nvidia/libGL.so.1
	
		# Not required for non-GLVND option but recommended
		# more info: https://devtalk.nvidia.com/default/topic/915640/multiple-glx-client-libraries-in-the-nvidia-linux-driver-installer-package/
		vinstall libGLX_nvidia.so.${version} 755 opt/lib/nvidia
		ln -sf libGLX_nvidia.so.${version} ${DESTDIR}/opt/lib/nvidia/libGLX_nvidia.so.0
		ln -sf libGLX_nvidia.so.${version} ${DESTDIR}/opt/lib/nvidia/libGLX_indirect.so.0
	fi
	
	# OpenGL core library
	vinstall libnvidia-glcore.so.${version} 755 opt/lib/nvidia
	vinstall libnvidia-eglcore.so.${version} 755 opt/lib/nvidia
	vinstall libnvidia-glsi.so.${version} 755 opt/lib/nvidia
	
	# EGL library
	vinstall libOpenGL.so.0 755 opt/lib/nvidia
	ln -sf libOpenGL.so.0 ${DESTDIR}/opt/lib/nvidia/libOpenGL.so
	
	vinstall libGLdispatch.so.0 755 opt/lib/nvidia
	
	vinstall libGLESv1_CM.so.1 755 opt/lib/nvidia
	ln -sf libGLESv1_CM.so.1 ${DESTDIR}/opt/lib/nvidia/libGLESv1_CM.so
	
	vinstall libGLESv2.so.2 755 opt/lib/nvidia
	ln -sf libGLESv2.so.2 ${DESTDIR}/opt/lib/nvidia/libGLESv2.so
	
	vinstall libEGL.so.1 755 opt/lib/nvidia
	ln -sf libEGL.so.1 ${DESTDIR}/opt/lib/nvidia/libEGL.so
	
	vinstall libEGL_nvidia.so.${version} 755 opt/lib/nvidia
	ln -sf libEGL_nvidia.so.${version} ${DESTDIR}/opt/lib/nvidia/libEGL_nvidia.so.0
	
	vinstall libGLESv1_CM_nvidia.so.${version} 755 opt/lib/nvidia
	ln -sf libGLESv1_CM_nvidia.so.${version} ${DESTDIR}/opt/lib/nvidia/libGLESv1_CM_nvidia.so.1
	
	vinstall libGLESv2_nvidia.so.${version} 755 opt/lib/nvidia
	ln -sf libGLESv2_nvidia.so.${version} ${DESTDIR}/opt/lib/nvidia/libGLESv2_nvidia.so.2
	
	# Thread Local Storage
	vinstall tls/libnvidia-tls.so.${version} 755 opt/lib/nvidia	
	
	# VDPAU
	vinstall libvdpau_nvidia.so.${version} 755 opt/lib/nvidia
	ln -sf libvdpau_nvidia.so.${version} ${DESTDIR}/opt/lib/nvidia/libvdpau_nvidia.so.1
	
	vinstall libnvidia-cfg.so.${version} 755 opt/lib/nvidia
	ln -sf libnvidia-cfg.so.${version} ${DESTDIR}/opt/lib/nvidia/libnvidia-cfg.so
	ln -sf libnvidia-cfg.so.${version} ${DESTDIR}/opt/lib/nvidia/libnvidia-cfg.so.1
	
	vinstall libnvidia-ml.so.${version} 755 opt/lib/nvidia
	ln -sf libnvidia-ml.so.${version} ${DESTDIR}/opt/lib/nvidia/libnvidia-ml.so
	ln -sf libnvidia-ml.so.${version} ${DESTDIR}/opt/lib/nvidia/libnvidia-ml.so.1
	
	vinstall libnvidia-encode.so.${version} 755 opt/lib/nvidia
	ln -sf libnvidia-encode.so.${version} ${DESTDIR}/opt/lib/nvidia/libnvidia-encode.so
	ln -sf libnvidia-encode.so.${version} ${DESTDIR}/opt/lib/nvidia/libnvidia-encode.so.1
	
	vinstall libnvidia-ifr.so.${version} 755 opt/lib/nvidia
	ln -sf libnvidia-ifr.so.${version} ${DESTDIR}/opt/lib/nvidia/libnvidia-ifr.so
	ln -sf libnvidia-ifr.so.${version} ${DESTDIR}/opt/lib/nvidia/libnvidia-ifr.so.1
	
	vinstall libnvidia-fbc.so.${version} 755 opt/lib/nvidia
	ln -sf libnvidia-fbc.so.${version} ${DESTDIR}/opt/lib/nvidia/libnvidia-fbc.so
	ln -sf libnvidia-fbc.so.${version} ${DESTDIR}/opt/lib/nvidia/libnvidia-fbc.so.1
	
	vinstall libnvidia-fatbinaryloader.so.${version} 755 opt/lib/nvidia

	# CUDA
	vbin nvidia-cuda-mps-control
	vbin nvidia-cuda-mps-server
	gzip -d nvidia-cuda-mps-control.1.gz
	vman nvidia-cuda-mps-control.1
	
	vinstall libcuda.so.${version} 755 opt/lib/nvidia
	ln -sf libcuda.so.${version} ${DESTDIR}/opt/lib/nvidia/libcuda.so
	ln -sf libcuda.so.${version} ${DESTDIR}/opt/lib/nvidia/libcuda.so.1
	
	vinstall libnvcuvid.so.${version} 755 opt/lib/nvidia
	ln -sf libnvcuvid.so.${version} ${DESTDIR}/opt/lib/nvidia/libnvcuvid.so
	ln -sf libnvcuvid.so.${version} ${DESTDIR}/opt/lib/nvidia/libnvcuvid.so.1
	
	vinstall libnvidia-ptxjitcompiler.so.${version} 755 opt/lib/nvidia
	
	# nvidia-xconfig
	vbin nvidia-xconfig
	gzip -d nvidia-xconfig.1.gz
	vman nvidia-xconfig.1
	
	# nvidia-settings
	vbin nvidia-settings
	gzip -d nvidia-settings.1.gz
	vman nvidia-settings.1
	vinstall nvidia-settings.desktop 644 usr/share/applications
	vinstall nvidia-settings.png 644 usr/share/pixmaps
	sed -e 's:__UTILS_PATH__:/usr/bin:' \
			-e 's:__PIXMAP_PATH__:/usr/share/pixmaps:' \
			-i ${DESTDIR}/usr/share/applications/nvidia-settings.desktop
  
	vinstall libnvidia-gtk3.so.${version} 755 opt/lib/nvidia
	vinstall libnvidia-gtk2.so.${version} 755 opt/lib/nvidia
	
	# application profiles (needed by nvidia-settings)
	vinstall nvidia-application-profiles-${version}-key-documentation 644 usr/share/nvidia
	vinstall nvidia-application-profiles-${version}-rc 644 usr/share/nvidia	
	
	# nvidia-bug-report
	vbin nvidia-bug-report.sh nvidia-bug-report
	vbin nvidia-debugdump
	
	# nvidia-smi
	vbin nvidia-smi
	gzip -d nvidia-smi.1.gz
	vman nvidia-smi.1
	
	# nvidia-modprobe
	vinstall nvidia-modprobe 4755 usr/bin
	gzip -d nvidia-modprobe.1.gz
	vman nvidia-modprobe.1	
	
	# License and documentation
	vlicense LICENSE
	vdoc README.txt README
	vdoc NVIDIA_Changelog

	# opencl pkg
	vinstall nvidia.icd 644 etc/OpenCL/vendors
	   
	vinstall libnvidia-compiler.so.${version} 755 opt/lib/nvidia

	vinstall libnvidia-opencl.so.${version} 755 opt/lib/nvidia
	ln -sf libnvidia-opencl.so.${version} \
					${DESTDIR}/opt/lib/nvidia/libnvidia-opencl.so
	ln -sf libnvidia-opencl.so.${version} \
					${DESTDIR}/opt/lib/nvidia/libnvidia-opencl.so.1     

	# dkms pkg
	vmkdir usr/src/nvidia-${version}
	vcopy "kernel/*" usr/src/nvidia-${version}
	vcopy ${FILESDIR}/dkms.conf usr/src/nvidia-${version}
	sed -e "s/__PKGVER/${version}/g" \
			-e "s/__MAKEJOBS/-j$(nproc)/g" \
			-i ${DESTDIR}/usr/src/nvidia-${version}/dkms.conf

	# Blacklist nouveau
	vmkdir usr/lib/modprobe.d
	echo "blacklist nouveau" > ${DESTDIR}/usr/lib/modprobe.d/nvidia.conf
	chmod 644 ${DESTDIR}/usr/lib/modprobe.d/nvidia.conf    
	
	# Omit drm dracut module
	vmkdir usr/lib/dracut/dracut.conf.d
	echo "omit_dracutmodules+=\" drm \"" > ${DESTDIR}/usr/lib/dracut/dracut.conf.d/99-nvidia.conf
	
	vmkdir /usr/share/X11/xorg.conf.d/
	vinstall nvidia-drm-outputclass.conf 644 /usr/share/X11/xorg.conf.d 30-nvidia-drm-outputclass.conf    
}

post_install() {
	echo "Creating /opt/etc/nvidia/nvidia.ld.conf..."
	vmkdir opt/etc/nvidia
	echo "/opt/lib/nvidia" > ${DESTDIR}/opt/etc/nvidia/nvidia.ld.conf
}

nvidia-unobtrusive-gtklibs_package() {
	short_desc="${_desc} - GTK libraries"
	provides="nvidia-gtklibs-${version}_${revision}"
	replaces="nvidia-gtklibs>=0"    
	pkg_install() {
		vmove opt/lib/nvidia/lib*gtk*.so*
	}
}

nvidia-unobtrusive-libs_package() {
	short_desc="${_desc} - common libraries"
	provides="nvidia-libs-${version}_${revision}"
	replaces="nvidia-libs>=0"
	pkg_install() {
		vmove opt/lib/nvidia
	}
}

nvidia-unobtrusive-dkms_package() {
	short_desc="${_desc} - DKMS kernel module"
	triggers="dkms"
	dkms_modules="nvidia ${version}"
	depends="dkms"
	provides="nvidia-dkms-${version}_${revision}"
	replaces="nvidia-dkms>=0"
	pkg_install() {
		vmove usr/src
		vmove usr/lib/modprobe.d
		vmove usr/lib/dracut
	}
}

nvidia-unobtrusive-opencl_package() {
	short_desc="${_desc} - OpenCL implementation"
	depends="libOpenCL"
	provides="nvidia-opencl-${version}_${revision}"
	replaces="nvidia-opencl>=0"     
	pkg_install() {
		vmove "opt/lib/nvidia/libnvidia-compiler*"
		vmove "opt/lib/nvidia/libnvidia-opencl*"
		vmove etc/OpenCL
	}
}
